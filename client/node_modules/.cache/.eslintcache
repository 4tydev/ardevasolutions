[{"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/index.js":"1","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/App.js":"2","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/reportWebVitals.js":"3","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Grid.js":"4","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Login.js":"5","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Home.js":"6","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Clients.js":"7","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Technologies.js":"8","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Solutions.js":"9","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Developers.js":"10","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Navbar.js":"11","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Sidebar.js":"12","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/ClientsForm.js":"13","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/DevelopersForm.js":"14","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/TechnologiesForm.js":"15","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/SolutionsForm.js":"16"},{"size":500,"mtime":1633109596767,"results":"17","hashOfConfig":"18"},{"size":1017,"mtime":1634778051309,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1633109596767,"results":"20","hashOfConfig":"18"},{"size":1217,"mtime":1634778051309,"results":"21","hashOfConfig":"18"},{"size":1420,"mtime":1637803966515,"results":"22","hashOfConfig":"18"},{"size":1589,"mtime":1634778051309,"results":"23","hashOfConfig":"18"},{"size":2858,"mtime":1636060549054,"results":"24","hashOfConfig":"18"},{"size":2869,"mtime":1637189663760,"results":"25","hashOfConfig":"18"},{"size":2598,"mtime":1636060549054,"results":"26","hashOfConfig":"18"},{"size":2983,"mtime":1636060549054,"results":"27","hashOfConfig":"18"},{"size":1592,"mtime":1634778051309,"results":"28","hashOfConfig":"18"},{"size":1861,"mtime":1634778051309,"results":"29","hashOfConfig":"18"},{"size":2571,"mtime":1637189663760,"results":"30","hashOfConfig":"18"},{"size":3282,"mtime":1637189663760,"results":"31","hashOfConfig":"18"},{"size":2892,"mtime":1637189663760,"results":"32","hashOfConfig":"18"},{"size":2118,"mtime":1637189663760,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1vrddwl",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/index.js",[],["72","73"],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/App.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/reportWebVitals.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Grid.js",["74"],"import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Clients from './Clients'\nimport Developers from './Developers'\nimport Sidebar from './Sidebar'\nimport Solutions from './Solutions'\nimport Technologies from './Technologies'\n\nconst Grid = () => {\n    return (\n        <div>\n            <Router>\n                <Row>\n                    <Sidebar />\n                    <Col>\n                        <Switch>\n                            <Route path='/clients'>\n                                <Clients/>\n                            </Route>\n                            <Route path='/Developers'>\n                                <Developers/>\n                            </Route>\n                            <Route path='/solutions'>\n                                <Solutions />\n                            </Route>\n                            <Route path='/technologies'>\n                                <Technologies/>\n                            </Route>\n                        </Switch>\n                    </Col>\n                </Row>\n            </Router>\n\n        </div>\n    )\n}\n\nexport default Grid\n","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Login.js",["75","76"],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Home.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Clients.js",["77"],"import React, { useState, useEffect } from \"react\";\nimport { CDBTable, CDBTableHeader, CDBTableBody, CDBContainer, CDBBtn, CDBModal, CDBInput } from \"cdbreact\";\nimport ClientsForm from \"./ClientsForm\";\nimport axios from \"axios\";\n\nconst baseURL = \"http://devasolutions.net/api/costumer\";\n\nconst Clients = () => {\n    const [id, setId] = useState(null)\n    const [rows, setRows] = useState(null)\n    const [state, setState] = useState({\n        modal1: false\n    });\n\n    const removeRow = () => {\n        axios.delete(`${baseURL}/${id}`).then((response => {\n            let updatedCustomers = rows.filter(row => row._id != id)\n            setRows(updatedCustomers)\n        })).catch( error => {\n            console.log('There was an error!', error)\n        })\n     }\n\n    const toggle = (nr) => () => {\n        let modalNumber = \"modal\" + nr;\n        setState({\n            ...state,\n            [modalNumber]: !state[modalNumber],\n        });\n    };\n    useEffect(() => {\n        axios.get(baseURL).then((response) => {\n            setRows(response.data);\n        })\n    })\n\n\n\n    const [showDeleteFields, setShowDeleteFields] = useState(false)\n    const triggerDelete = () => setShowDeleteFields(true)\n    \n    return (\n        <div>\n            <CDBContainer style={{ paddingTop: \"1.5em\", paddingBottom: \"1.5em\" }}>\n                <CDBBtn color=\"primary\" onClick={toggle(1)} style={{ marginRight: \"1em\" }}>Agregar clientes</CDBBtn>\n                <CDBBtn color=\"danger\" onClick={triggerDelete}>Remover clientes</CDBBtn>\n                { showDeleteFields ? <div> \n                    <CDBInput label=\"id\" onChange = { e => {setId(e.target.value)}}/>\n                    <CDBBtn color=\"primary\" onClick={removeRow}>Borrar</CDBBtn>\n                 </div> : null }\n            </CDBContainer>\n            <CDBModal isOpen={state.modal1} toggle={toggle(1)} centered fade>\n                <ClientsForm />\n            </CDBModal>\n            <CDBTable striped>\n                <CDBTableHeader>\n                    <tr>\n                        <th>#</th>\n                        <th>Nombre</th>\n                        <th>Email</th>\n                        <th>Soluciones</th>\n                        <th>Area de Trabajo</th>\n                    </tr>\n                </CDBTableHeader>\n                <CDBTableBody>\n                    {rows ? rows.map((element) => (\n                        <tr>\n                            <td key={element._id}>{element._id}</td>\n                            <td>{element.name}</td>\n                            <td>{element.email}</td>\n                            <td>{element.solutions}</td>\n                            <td>{element.work_area}</td>\n                        </tr>\n                    )) : \"Loading...\"}\n                </CDBTableBody>\n            </CDBTable>\n        </div>\n    );\n};\nexport default Clients;","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Technologies.js",["78"],"import React, {useState} from \"react\";\nimport { CDBTable, CDBTableHeader, CDBInput, CDBTableBody, CDBContainer, CDBBtn, CDBModal } from \"cdbreact\";\nimport TechnologiesForm from \"./TechnologiesForm\";\nimport axios from \"axios\";\n\nconst baseURL = \"http://devasolutions.net/api/technology\";\nconst Technologies = () => {\n    const [id, setId] = useState(null)\n    const [rows, setRows] = useState(null)\n    const [state, setState] = useState({\n        modal1: false\n      });\n\n      const removeRow = () => {\n        axios.delete(`${baseURL}/${id}`).then((response => {\n            let updatedTechnologies = rows.filter(row => row._id !== id)\n            setRows(updatedTechnologies)\n        })).catch( error => {\n            console.log('There was an error!', error)\n        })\n     }\n\n      const toggle = (nr) => () => {\n        let modalNumber = \"modal\" + nr;\n        setState({\n          ...state,\n          [modalNumber]: !state[modalNumber],\n        });\n      };\n    React.useEffect(() => {\n        axios.get(baseURL).then( (response)  => {\n            setRows(response.data);\n        });\n    });\n\n    const [showDeleteFields, setShowDeleteFields] = useState(false)\n    const triggerDelete = () => setShowDeleteFields(true)\n    \n    \n    return (\n        <div>\n        <CDBContainer style={{paddingTop: \"1.5em\", paddingBottom: \"1.5em\"}}>\n            <CDBBtn color=\"primary\" onClick={toggle(1)} style={{marginRight: \"1em\"}}>Agregar tecnologías</CDBBtn>\n            <CDBBtn color=\"danger\" onClick={triggerDelete}>Remover tecnologías</CDBBtn>\n            { showDeleteFields ? <div> \n                    <CDBInput label=\"id\" onChange = { e => {setId(e.target.value)}}/>\n                    <CDBBtn color=\"primary\" onClick={removeRow}>Borrar</CDBBtn>\n                 </div> : null }\n            </CDBContainer>\n            <CDBModal isOpen={state.modal1} toggle={toggle(1)} centered fade>\n                <TechnologiesForm/>\n            </CDBModal>\n        <CDBTable striped>\n            <CDBTableHeader>\n                <tr>\n                    <th>#</th>\n                    <th>Nombre</th>\n                    <th>Desarrollador</th>\n                    <th>Versión</th>\n                    <th>Enlace</th>\n                    <th>Descripción</th>\n\n                </tr>\n            </CDBTableHeader>\n            <CDBTableBody>\n                {rows ? rows .map((element) => (\n                    <tr>\n                        <td>{element._id}</td>\n                        <td>{element.name}</td>\n                        <td>{element.developer}</td>\n                        <td>{element.version}</td>\n                        <td>{element.link}</td>\n                        <td>{element.description}</td>\n                    </tr>\n                )): \"Loading...\"}\n            </CDBTableBody>\n        </CDBTable>\n        </div>\n    );\n};\nexport default Technologies;\n","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Solutions.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Developers.js",["79"],"import React, { useState } from \"react\";\nimport { CDBTable, CDBTableHeader, CDBTableBody, CDBContainer, CDBBtn, CDBModal, CDBInput } from \"cdbreact\";\nimport DevelopersForm from \"./DevelopersForm\";\nimport axios from \"axios\";\n\nconst baseURL = \"http://devasolutions.net/api/developer\";\nconst Developers = () => {\n    const [id, setId] = useState(null)\n    const [rows, setRows] = useState(null)\n    const [state, setState] = useState({\n        modal1: false\n    });\n\n    const removeRow = () => {\n        axios.delete(`${baseURL}/${id}`).then((response => {\n            let updatedDevelopers = rows.filter(row => row._id != id)\n            setRows(updatedDevelopers)\n        })).catch( error => {\n            console.log('There was an error!', error)\n        })\n     }\n\n    const toggle = (nr) => () => {\n        let modalNumber = \"modal\" + nr;\n        setState({\n            ...state,\n            [modalNumber]: !state[modalNumber],\n        });\n    };\n\n    React.useEffect(() => {\n        axios.get(baseURL).then((response) => {\n            setRows(response.data);\n        });\n    })\n\n    const [showDeleteFields, setShowDeleteFields] = useState(false)\n    const triggerDelete = () => setShowDeleteFields(true)\n\n    return (\n        <div>\n            <CDBContainer style={{ paddingTop: \"1.5em\", paddingBottom: \"1.5em\" }}>\n                <CDBBtn color=\"primary\" onClick={toggle(1)} style={{ marginRight: \"1em\" }}>Agregar developers</CDBBtn>\n                <CDBBtn color=\"danger\" onClick={triggerDelete}>Remover developers</CDBBtn>\n                { showDeleteFields ? <div> \n                    <CDBInput label=\"id\" onChange = { e => {setId(e.target.value)}}/>\n                    <CDBBtn color=\"primary\" onClick={removeRow}>Borrar</CDBBtn>\n                 </div> : null }\n            </CDBContainer>\n            <CDBModal isOpen={state.modal1} toggle={toggle(1)} centered fade>\n                <DevelopersForm />\n            </CDBModal>\n            <CDBTable striped>\n                <CDBTableHeader>\n                    <tr>\n                        <th>#</th>\n                        <th>Nombre</th>\n                        <th>Habilidades</th>\n                        <th>Correo</th>\n                        <th>Clientes</th>\n                        <th>Descripción</th>\n                    </tr>\n                </CDBTableHeader>\n                <CDBTableBody>\n                    {rows ? rows.map((element) => (\n                        <tr>\n                            <td>{element._id}</td>\n                        <td>{element.name.first + \" \" + element.name.last}</td>\n                        <td>{element.skills.join(', ')}</td>\n                        <td>{element.email}</td>\n                        <td>{element.costumers.join(', ')}</td>\n                        <td>{element.description}</td>\n                        </tr>\n                    )): \"Loading...\" }\n                </CDBTableBody>\n            </CDBTable>\n        </div>\n    );\n};\nexport default Developers;","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Navbar.js",["80","81","82","83","84","85","86","87"],"import React, { useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { CDBNavbar, CDBNavBrand, CDBNavItem, CDBNavLink, CDBDropDown, CDBDropDownMenu, CDBDropDownToggle, CDBBtn, CDBNavToggle, CDBCollapse, CDBNavbarNav, CDBContainer } from \"cdbreact\";\nimport Login from './Login'\n\nconst Navbar = () => {\n    const [collapse2, setCollapse2] = useState(false);\n    const bgBlack = { backgroundColor: \"#000000\", color: \"#f4f4f4\" };\n\n\n    return (\n        <CDBNavbar style={bgBlack} dark expand=\"md\" scrolling>\n            <CDBNavBrand href=\"/\">\n                <strong>Ardevasolutions</strong>\n            </CDBNavBrand>\n            <CDBNavToggle\n                onClick={() => {\n                    setCollapse2(!collapse2);\n                }}\n            />\n            <CDBCollapse id=\"navbarCollapse1\" isOpen={collapse2} navbar>\n                <CDBNavbarNav left className=\"align-items-center\">\n                </CDBNavbarNav>\n                <CDBNavbarNav right>\n                    <CDBNavItem>\n                        Nombre del administrador\n                    </CDBNavItem>\n                    <CDBNavItem>\n                        <CDBBtn color=\"white\" style={{ padding: \"0px 10px\" }}>\n                            <CDBNavLink to=\"/login\" style={{ color: \"#000\" }}>\n                                Iniciar sesión\n                            </CDBNavLink>\n                        </CDBBtn>\n                    </CDBNavItem>\n                </CDBNavbarNav>\n            </CDBCollapse>\n        </CDBNavbar>\n    )\n}\n\nexport default Navbar\n","/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/Sidebar.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/ClientsForm.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/DevelopersForm.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/TechnologiesForm.js",[],"/home/mhurtado/Documents/DevaSolutions/ardevasolutions/client/src/Components/SolutionsForm.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":19},{"ruleId":"92","severity":1,"message":"96","line":2,"column":50,"nodeType":"94","messageId":"95","endLine":2,"endColumn":57},{"ruleId":"92","severity":1,"message":"97","line":2,"column":59,"nodeType":"94","messageId":"95","endLine":2,"endColumn":71},{"ruleId":"98","severity":1,"message":"99","line":17,"column":63,"nodeType":"100","messageId":"101","endLine":17,"endColumn":65},{"ruleId":"102","severity":1,"message":"103","line":66,"column":25,"nodeType":"104","messageId":"105","endLine":66,"endColumn":34,"fix":"106"},{"ruleId":"98","severity":1,"message":"99","line":16,"column":64,"nodeType":"100","messageId":"101","endLine":16,"endColumn":66},{"ruleId":"92","severity":1,"message":"107","line":2,"column":27,"nodeType":"94","messageId":"95","endLine":2,"endColumn":33},{"ruleId":"92","severity":1,"message":"108","line":2,"column":35,"nodeType":"94","messageId":"95","endLine":2,"endColumn":41},{"ruleId":"92","severity":1,"message":"109","line":2,"column":43,"nodeType":"94","messageId":"95","endLine":2,"endColumn":48},{"ruleId":"92","severity":1,"message":"110","line":3,"column":58,"nodeType":"94","messageId":"95","endLine":3,"endColumn":69},{"ruleId":"92","severity":1,"message":"111","line":3,"column":71,"nodeType":"94","messageId":"95","endLine":3,"endColumn":86},{"ruleId":"92","severity":1,"message":"112","line":3,"column":88,"nodeType":"94","messageId":"95","endLine":3,"endColumn":105},{"ruleId":"92","severity":1,"message":"97","line":3,"column":156,"nodeType":"94","messageId":"95","endLine":3,"endColumn":168},{"ruleId":"92","severity":1,"message":"113","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":13},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'CDBLink' is defined but never used.","'CDBContainer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-whitespace-before-property","Unexpected whitespace before property map.","MemberExpression","unexpectedWhitespace",{"range":"116","text":"117"},"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'CDBDropDown' is defined but never used.","'CDBDropDownMenu' is defined but never used.","'CDBDropDownToggle' is defined but never used.","'Login' is defined but never used.","no-global-assign","no-unsafe-negation",[2355,2357],"."]